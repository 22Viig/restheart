## RESTHeart configuration file.
---
#### listeners

# restheart uses basic authentication; usernames and passwords are sent over the net on each request.
# you must use the https listener to avoid your credentials to be sniffed.
# use the http listener only on private environments or in case you have a web server using https in front of restheart 

https-listener: true
https-host: 0.0.0.0
https-port: 4443

http-listener: true
http-host: 0.0.0.0
http-port: 8080

ajp-listener: false
ajp-host: 0.0.0.0
ajp-port: 8009

#### SSL configuration

# use the embedded self-signed certificate
use-embedded-keystore: true

# uncomment the following lines to use your own certificate. you'll need to create a keystore

#keystore-file: /path/to/keystore/file
#keystore-password: password
#certpassword: password

#### mongodb 

# in case of replica set, define host and port for all mongod instances
mongo-servers:
    - host: 127.0.0.1
      port: 27017

mongo-credentials:
    - auth-db: admin
      user: admin
      password: adminadmin
      
mongo-mounts:
    - db: "*"
      url: /
#    - db: "*"
#      url: /all

### security 
idm:    
    implementation-class: com.softinstigate.restheart.security.impl.SimpleFileIdentityManager
    conf-file: ./security.yml
access-manager:    
    implementation-class: com.softinstigate.restheart.security.impl.SimpleAccessManager
    conf-file: ./security.yml
    
#### protocol

# if you want to save bandwitdth, you can force requests to support the giz encoding only (if not, requests will be rejected)
force-gzip-encoding: false

#### logging

enable-log-file: true
log-file-path: /tmp/restheart.log

enable-log-console: true

#  log levels: OFF, ERROR, WARN, INFO, DEBUG, TRACE and ALL.
log-level: INFO

#### performace settings

# to set a limit for the maximum number of concurrent requests being served
requests-limit: 100

# the number of I/O threads created for non-blocking tasks. at least 2. suggested value: core*2
io-threads: 2

# the number of threads created for blocking tasks (such as ones involving db access). suggested value: core*16
worker-threads: 32

# use 16k buffers for best performance - as in linux 16k is generally the default amount of data that can be sent in a single write() call
buffer-size: 16384
buffers-per-region: 20
# should the buffer pool use direct buffers, this instructs the JVM to use native (if possible) I/O operations on the buffers
direct-buffers: true
